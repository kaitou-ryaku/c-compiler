static int delete_lift_solitary_pt(const int index, char* pt) {

  int ret;
  const char del = pt[index];

  const int alone     = (del.left <  0 && del.right <  0);
  const int leftside  = (del.left <  0 && del.right >= 0);
  const int rightside = (del.left >= 0 && del.right <  0);
  const int center    = (del.left >= 0 && del.right >= 0);


  if (del.up < 0) {
    ret = false;
  }

  else if (del.down < 0) {
    ret = true;

    if (alone) {
      pt[del.up].down = -1;
    }

    if (leftside) {
      pt[del.up].down = del.right;
      pt[del.right].left = -1;
    }

    if (rightside) {
      pt[del.left].right = -1;
    }

    if (center) {
      pt[del.left].right = del.right;
      pt[del.right].left = del.left;
    }
  }

  else if (pt[del.down].left < 0 && pt[del.down].right < 0) {
    ret = true;

    if (alone) {
      pt[del.up].down = del.down;
      pt[del.down].up = del.up;
    }

    if (leftside) {
      pt[del.up].down = del.down;
      pt[del.down].up = del.up;

      pt[del.right].left = del.down;
      pt[del.down].right = del.right;
    }

    if (rightside) {
      pt[del.down].up = del.up;

      pt[del.left].right = del.down;
      pt[del.down].left  = del.left;
    }

    if (center) {
      pt[del.down].up = del.up;

      pt[del.right].left = del.down;
      pt[del.down].right = del.right;

      pt[del.left].right = del.down;
      pt[del.down].left  = del.left;
    }
  }

  else {
    ret = false;
  }

  return ret;
}

